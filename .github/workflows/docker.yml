name: Docker Build and Push

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [server, admin, web]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Generate .env.production
        if: matrix.service == 'web' || matrix.service == 'admin'
        run: |
          if [ "${{ matrix.service }}" = "web" ]; then
            echo "NEXT_PUBLIC_PROJECT_API=${{ secrets.NEXT_PUBLIC_PROJECT_API }}" > ./web/.env.production
          elif [ "${{ matrix.service }}" = "admin" ]; then
            echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" > ./admin/.env.production
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract tag
        id: get_tag
        run: echo "tag=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT

      - name: Build and push ${{ matrix.service }} image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          file: ./${{ matrix.service }}/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            codepzj/stellux-${{ matrix.service }}:${{ steps.get_tag.outputs.tag }}
            codepzj/stellux-${{ matrix.service }}:latest
